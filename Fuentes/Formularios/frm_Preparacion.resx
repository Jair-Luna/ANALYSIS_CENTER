<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Guardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsSAAALEgHS3X78AAAGCElE
        QVRIS8WWaVBTZxSGoywuxRlwKkqx1qpYsUzdlzrYYtVWp2NxqNSKaxhAMLZIKCI7JagUV0BFkLCEsMSF
        NRCDCYgKkg0IkERZZHEBwQGlLlXHvj0X1C5Wp+2fvjPP3B/n3udb7pnvXtb/noiICBuBQPBtdnZ2WEZ6
        +v4UPn9PXFych6+v7zwqGw/e9R8iECQvKi2Vieq1Nb3XWpph0OugUatQJpejuLAAyYkJTyN5vEp3T09X
        ut108Kl/EGdnZyOxOC9Co1Y86r/Xh7sPH6Cxqxsl+ibwK7WIK1UjUXYZAkkpcnLzkHA0DhwOp3jixIkf
        PFe8PmVlYcYFBXkp2hoVrnW0o+FmN7Sdd9DQ3QtN522UtHYgp7EdGbpWHFEYEHlWgeR8KbIEafD03Gqw
        trZe8Fz19zl1SsSTy85CUVODS61d0PX0oeXuz2jrfwhDXx8ud92G7DpxoxvnOjqRpW8Fp1CFmHw5hKkp
        WLNmTR1p7AZtfwmfz1+QlSl8IimR4kz9NWi6ekl8H9fu3Ye2rRWSC3IkZ6fjiCAVqWelKLjSTAPdRnx1
        ExyzK8AXy3BwXzRmz56dQboxg9Y/JD4+/rQoMx1J5Qocr22BorMHht4+XNBUQSRKxdG4aERGBCIseCfC
        QnZiX+xBZCurcaKhDesLq7Hh5EWIzuRig4vLw6FDh24h5bBBMyUmJmby4QP7+xMysuAj1WBPpR6iK+0Q
        FhXgSGwUDh+OQiQvCOGhuxAe4o8wuvpxOeB8x0FgcSU2SuqwPLMShwpKaRLhmDBhfB5pbQbtlODgYJco
        XgRChXlYm6uCt7wBfjly2tPVWO+8Gt4BAYgtrQA3wB8/JvKxOzsHzk6r8fHMj7DYdTs2lOjheFKJbSfL
        kXQiEbNmzWwnrRMx2L5cLpcXERoML0ER1uVXw0t+FUt8eTA3ewvTp9pg0YL52MHPQkjheYRIKuDo6gHb
        KZNgMWoURr9vA3ahGpsKa8E+VYlU2oVPFy9+SNpAYvSLAWIORkfBI6ME7GItuJdasJC9HVSCqYkJzIab
        ws7eAaENPWAL8mE2YjiMjY0H6qMsreCRcxGeMh3YOVXIzBNj5efLn1LtGPEewWL5+fkeSE/hw1skh0dJ
        PYKUbfjSP3JAwGA8fARcjgixLkGE78/VYIbj2pe1MbSCgPP18D6vh0e+EmJZGb5YtuwZ1QTENILF2uru
        7pN7SoSownK4S+sQoWnDDzkymJCYypgydyG2JolgbmWNpR7ecNkbi2EjRg7UFq/bgkO6W/At14NbrEZF
        RQXmzpnDrCCdsCVYLHt7+2XpyfxnOReUcBWrwVM245ihEyvcOC9n+keGDBkycLUYOw77SxU4qrsJrxIt
        UlSNkNA5ZWlp+YDqx4lJxEDeDtzlr6uqUmCXRImdFw2I191AmuE6VmxkvzIAw/jJUxB9WozTHb3Yp2mB
        G22Pks4rXx8fZgJddE84YUkMxsHBITRTmA6JogaetIooVTOEzV0ovtGHfdSWX7PdsOizZVi66itweXuR
        X98IWfd9JDV0YJu0FsfkKqQl82FjY/Mr6WqJDcQIxv0iUzdv3lwrOytB1iUapEgDXlUThFdvQd7zAMq7
        v6D67iPU9j+Gpv8JpDf7EF/Xju3n6hCaV46E48exxMEBRkZG98jF7P9sYggjfhETc3PzTe5ubj3S4iLk
        Xq7FjiI1PKVahF1uRKy2DXz9DSQ0XEe0phXccgM8qP9DM8UICgzEJ/b2GDlyJPNyVQTzjTAnXsk7ZmZm
        IU5OTnfS+Ekou1SJpDI1/MRV2CZW0arU8KKVcXIrsFMoRviBOLhuXA+7D6czcqY1mwgewRwTf5r9ixgR
        TDHU1ta2ib15E47FHEKGQIDY+EQE7f4JPgHB2OHtjfXfOGPhvDmwsrKCiYnJY3pGT0QTc4g3fkpNiCmE
        F3VD8bhxY2/Z2dk9WTh/HubOmolpdHSMt7aGhYUFTE1NGfEtQkb4EzOI30/RN2QowbTYUiKIEBGVhI5o
        JAyEgsglmC1ZRbxL/OufAGY1Y4mZxErChWATTAsyUubPwpp4zaxZrN8AsNyri422v3kAAAAASUVORK5C
        YII=
</value>
  </data>
</root>